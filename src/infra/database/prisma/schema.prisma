// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  accounts    Account[]
  targets     Target[]
  Investment  Investment[]
  Transaction Transaction[]
  Card        Card[]

  @@map("users")
}

model Account {
  id            String        @id @default(uuid())
  bank          String
  branch        String
  accountNumber String
  User          User?         @relation(fields: [userId], references: [id])
  userId        String?
  Investment    Investment[]
  Transaction   Transaction[]

  @@map("accounts")
}

model Target {
  id         String       @id @default(uuid())
  name       String
  User       User?        @relation(fields: [userId], references: [id])
  userId     String?
  Investment Investment[]

  @@map("targets")
}

model Investment {
  id              String    @id @default(uuid())
  type            String
  subtype         String
  tax             String?
  name            String?
  quantity        Int?
  applicationDate DateTime
  redeemDate      DateTime?
  hasLiquidity    Boolean
  amount          Decimal
  User            User?     @relation(fields: [userId], references: [id])
  userId          String?
  Account         Account?  @relation(fields: [accountId], references: [id])
  accountId       String?
  Target          Target?   @relation(fields: [targetId], references: [id])
  targetId        String?

  @@map("investments")
}

model Transaction {
  id        String   @id @default(uuid())
  date      DateTime
  amount    Decimal
  type      String
  category  String
  source    String
  Account   Account? @relation(fields: [accountId], references: [id])
  accountId String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@map("transactions")
}

model Card {
  id         String   @id @default(uuid())
  name       String
  number     String
  limit      Decimal
  expiry_day DateTime
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?

  @@map("cards")
}
